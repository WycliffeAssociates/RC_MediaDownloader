buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_ver"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint_ver"
    }
}

plugins {
    id 'kotlin'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'io.gitlab.arturbosch.detekt'
    id 'maven'
}

group = 'org.wycliffeassociates.resourcecontainer.lib'
version = '0.0.1'

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.wycliffeassociates:kotlin-resource-container:0.6.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "org.slf4j:slf4j-api:$slf4j_api_ver"
    implementation "org.slf4j:slf4j-simple:$slf4j_simple_ver"
    implementation("com.github.ajalt.clikt:clikt:3.0.0")

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${System.getenv("NEXUS_URL")}/repository/maven-releases") {
                authentication(
                        userName: System.getenv("NEXUS_USER"),
                        password: System.getenv("NEXUS_PASSWORD")
                )
            }
            snapshotRepository(url: "${System.getenv("NEXUS_URL")}/repository/maven-snapshots") {
                authentication(
                        userName: System.getenv("NEXUS_USER"),
                        password: System.getenv("NEXUS_PASSWORD")
                )
            }
            pom.project {
                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/WycliffeAssociates/RC_MediaDownloader/master/LICENSE'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}